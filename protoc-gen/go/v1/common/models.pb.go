// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/common/models.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LkSG-specific risk categories.
type StructuredEvidence_LkSGRiskCategory int32

const (
	StructuredEvidence_LK_SG_RISK_CATEGORY_UNSPECIFIED StructuredEvidence_LkSGRiskCategory = 0
	StructuredEvidence_CHILD_LABOR                     StructuredEvidence_LkSGRiskCategory = 1
	StructuredEvidence_FORCED_LABOR                    StructuredEvidence_LkSGRiskCategory = 2
	StructuredEvidence_WORKPLACE_SAFETY                StructuredEvidence_LkSGRiskCategory = 3
	StructuredEvidence_DISCRIMINATION                  StructuredEvidence_LkSGRiskCategory = 4
	StructuredEvidence_UNLAWFUL_EVICTION               StructuredEvidence_LkSGRiskCategory = 5
	StructuredEvidence_ENVIRONMENTAL_DAMAGE            StructuredEvidence_LkSGRiskCategory = 6
)

// Enum value maps for StructuredEvidence_LkSGRiskCategory.
var (
	StructuredEvidence_LkSGRiskCategory_name = map[int32]string{
		0: "LK_SG_RISK_CATEGORY_UNSPECIFIED",
		1: "CHILD_LABOR",
		2: "FORCED_LABOR",
		3: "WORKPLACE_SAFETY",
		4: "DISCRIMINATION",
		5: "UNLAWFUL_EVICTION",
		6: "ENVIRONMENTAL_DAMAGE",
	}
	StructuredEvidence_LkSGRiskCategory_value = map[string]int32{
		"LK_SG_RISK_CATEGORY_UNSPECIFIED": 0,
		"CHILD_LABOR":                     1,
		"FORCED_LABOR":                    2,
		"WORKPLACE_SAFETY":                3,
		"DISCRIMINATION":                  4,
		"UNLAWFUL_EVICTION":               5,
		"ENVIRONMENTAL_DAMAGE":            6,
	}
)

func (x StructuredEvidence_LkSGRiskCategory) Enum() *StructuredEvidence_LkSGRiskCategory {
	p := new(StructuredEvidence_LkSGRiskCategory)
	*p = x
	return p
}

func (x StructuredEvidence_LkSGRiskCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StructuredEvidence_LkSGRiskCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_common_models_proto_enumTypes[0].Descriptor()
}

func (StructuredEvidence_LkSGRiskCategory) Type() protoreflect.EnumType {
	return &file_v1_common_models_proto_enumTypes[0]
}

func (x StructuredEvidence_LkSGRiskCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StructuredEvidence_LkSGRiskCategory.Descriptor instead.
func (StructuredEvidence_LkSGRiskCategory) EnumDescriptor() ([]byte, []int) {
	return file_v1_common_models_proto_rawDescGZIP(), []int{2, 0}
}

// Represents a real-time event from a customer's system.
type EventData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // e.g., 'SHIPMENT_DEPARTED', 'SUPPLIER_AUDIT_FAILED'
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // ISO 8601 format
	AssetId       string                 `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	SupplierId    string                 `protobuf:"bytes,5,opt,name=supplier_id,json=supplierId,proto3" json:"supplier_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_v1_common_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_common_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_v1_common_models_proto_rawDescGZIP(), []int{0}
}

func (x *EventData) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventData) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *EventData) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *EventData) GetSupplierId() string {
	if x != nil {
		return x.SupplierId
	}
	return ""
}

func (x *EventData) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// The complete risk assessment output from the SCG-RiskAdvisor AI agent.
type RiskAssessment struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AssessmentId       string                 `protobuf:"bytes,1,opt,name=assessment_id,json=assessmentId,proto3" json:"assessment_id,omitempty"`
	EventId            string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	RiskScore          float64                `protobuf:"fixed64,3,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty"`                          // A value between 0.0 and 1.0
	Confidence         float64                `protobuf:"fixed64,4,opt,name=confidence,proto3" json:"confidence,omitempty"`                                         // AI's confidence in its assessment
	Summary            string                 `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`                                                 // Human-readable summary
	StructuredEvidence []*StructuredEvidence  `protobuf:"bytes,6,rep,name=structured_evidence,json=structuredEvidence,proto3" json:"structured_evidence,omitempty"` // Machine-parsable evidence list
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskAssessment) Reset() {
	*x = RiskAssessment{}
	mi := &file_v1_common_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessment) ProtoMessage() {}

func (x *RiskAssessment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_common_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessment.ProtoReflect.Descriptor instead.
func (*RiskAssessment) Descriptor() ([]byte, []int) {
	return file_v1_common_models_proto_rawDescGZIP(), []int{1}
}

func (x *RiskAssessment) GetAssessmentId() string {
	if x != nil {
		return x.AssessmentId
	}
	return ""
}

func (x *RiskAssessment) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RiskAssessment) GetRiskScore() float64 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *RiskAssessment) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *RiskAssessment) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *RiskAssessment) GetStructuredEvidence() []*StructuredEvidence {
	if x != nil {
		return x.StructuredEvidence
	}
	return nil
}

// The structured evidence of a risk, as determined by the AI.
type StructuredEvidence struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	EvidenceType  StructuredEvidence_LkSGRiskCategory `protobuf:"varint,1,opt,name=evidence_type,json=evidenceType,proto3,enum=scg.v1.common.StructuredEvidence_LkSGRiskCategory" json:"evidence_type,omitempty"`
	Justification string                              `protobuf:"bytes,2,opt,name=justification,proto3" json:"justification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StructuredEvidence) Reset() {
	*x = StructuredEvidence{}
	mi := &file_v1_common_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructuredEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructuredEvidence) ProtoMessage() {}

func (x *StructuredEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_v1_common_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructuredEvidence.ProtoReflect.Descriptor instead.
func (*StructuredEvidence) Descriptor() ([]byte, []int) {
	return file_v1_common_models_proto_rawDescGZIP(), []int{2}
}

func (x *StructuredEvidence) GetEvidenceType() StructuredEvidence_LkSGRiskCategory {
	if x != nil {
		return x.EvidenceType
	}
	return StructuredEvidence_LK_SG_RISK_CATEGORY_UNSPECIFIED
}

func (x *StructuredEvidence) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

var File_v1_common_models_proto protoreflect.FileDescriptor

const file_v1_common_models_proto_rawDesc = "" +
	"\n" +
	"\x16v1/common/models.proto\x12\rscg.v1.common\"\xa0\x02\n" +
	"\tEventData\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12\x19\n" +
	"\basset_id\x18\x04 \x01(\tR\aassetId\x12\x1f\n" +
	"\vsupplier_id\x18\x05 \x01(\tR\n" +
	"supplierId\x12B\n" +
	"\bmetadata\x18\x06 \x03(\v2&.scg.v1.common.EventData.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x01\n" +
	"\x0eRiskAssessment\x12#\n" +
	"\rassessment_id\x18\x01 \x01(\tR\fassessmentId\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x03 \x01(\x01R\triskScore\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x01R\n" +
	"confidence\x12\x18\n" +
	"\asummary\x18\x05 \x01(\tR\asummary\x12R\n" +
	"\x13structured_evidence\x18\x06 \x03(\v2!.scg.v1.common.StructuredEvidenceR\x12structuredEvidence\"\xcb\x02\n" +
	"\x12StructuredEvidence\x12W\n" +
	"\revidence_type\x18\x01 \x01(\x0e22.scg.v1.common.StructuredEvidence.LkSGRiskCategoryR\fevidenceType\x12$\n" +
	"\rjustification\x18\x02 \x01(\tR\rjustification\"\xb5\x01\n" +
	"\x10LkSGRiskCategory\x12#\n" +
	"\x1fLK_SG_RISK_CATEGORY_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vCHILD_LABOR\x10\x01\x12\x10\n" +
	"\fFORCED_LABOR\x10\x02\x12\x14\n" +
	"\x10WORKPLACE_SAFETY\x10\x03\x12\x12\n" +
	"\x0eDISCRIMINATION\x10\x04\x12\x15\n" +
	"\x11UNLAWFUL_EVICTION\x10\x05\x12\x18\n" +
	"\x14ENVIRONMENTAL_DAMAGE\x10\x06B@Z>github.com/SupplyChainGuard/scg-protos/gen/go/v1/common;commonb\x06proto3"

var (
	file_v1_common_models_proto_rawDescOnce sync.Once
	file_v1_common_models_proto_rawDescData []byte
)

func file_v1_common_models_proto_rawDescGZIP() []byte {
	file_v1_common_models_proto_rawDescOnce.Do(func() {
		file_v1_common_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_common_models_proto_rawDesc), len(file_v1_common_models_proto_rawDesc)))
	})
	return file_v1_common_models_proto_rawDescData
}

var file_v1_common_models_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_common_models_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_common_models_proto_goTypes = []any{
	(StructuredEvidence_LkSGRiskCategory)(0), // 0: scg.v1.common.StructuredEvidence.LkSGRiskCategory
	(*EventData)(nil),                        // 1: scg.v1.common.EventData
	(*RiskAssessment)(nil),                   // 2: scg.v1.common.RiskAssessment
	(*StructuredEvidence)(nil),               // 3: scg.v1.common.StructuredEvidence
	nil,                                      // 4: scg.v1.common.EventData.MetadataEntry
}
var file_v1_common_models_proto_depIdxs = []int32{
	4, // 0: scg.v1.common.EventData.metadata:type_name -> scg.v1.common.EventData.MetadataEntry
	3, // 1: scg.v1.common.RiskAssessment.structured_evidence:type_name -> scg.v1.common.StructuredEvidence
	0, // 2: scg.v1.common.StructuredEvidence.evidence_type:type_name -> scg.v1.common.StructuredEvidence.LkSGRiskCategory
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_common_models_proto_init() }
func file_v1_common_models_proto_init() {
	if File_v1_common_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_common_models_proto_rawDesc), len(file_v1_common_models_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_common_models_proto_goTypes,
		DependencyIndexes: file_v1_common_models_proto_depIdxs,
		EnumInfos:         file_v1_common_models_proto_enumTypes,
		MessageInfos:      file_v1_common_models_proto_msgTypes,
	}.Build()
	File_v1_common_models_proto = out.File
	file_v1_common_models_proto_goTypes = nil
	file_v1_common_models_proto_depIdxs = nil
}
