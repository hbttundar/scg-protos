// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/services/ingestion.proto

package services

import (
	_ "github.com/SupplyChainGuard/scg-protos/gen/go/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An enumeration of possible event types.
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Manufacturing & Production
	EventType_MANUFACTURING_BATCH_CREATED EventType = 10
	EventType_QUALITY_ASSURANCE_PASSED    EventType = 11
	EventType_QUALITY_ASSURANCE_FAILED    EventType = 12
	// Logistics & Transportation
	EventType_SHIPMENT_CREATED    EventType = 20
	EventType_SHIPMENT_IN_TRANSIT EventType = 21
	EventType_SHIPMENT_DELIVERED  EventType = 22
	EventType_SHIPMENT_DELAYED    EventType = 23
	// Supplier & Compliance
	EventType_SUPPLIER_AUDIT_SCHEDULED EventType = 30
	EventType_SUPPLIER_AUDIT_COMPLETED EventType = 31
	EventType_SUPPLIER_AUDIT_FAILED    EventType = 32
	// Customs & Regulatory
	EventType_CUSTOMS_CLEARED         EventType = 40
	EventType_CUSTOMS_INSPECTION_HOLD EventType = 41
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNSPECIFIED",
		10: "MANUFACTURING_BATCH_CREATED",
		11: "QUALITY_ASSURANCE_PASSED",
		12: "QUALITY_ASSURANCE_FAILED",
		20: "SHIPMENT_CREATED",
		21: "SHIPMENT_IN_TRANSIT",
		22: "SHIPMENT_DELIVERED",
		23: "SHIPMENT_DELAYED",
		30: "SUPPLIER_AUDIT_SCHEDULED",
		31: "SUPPLIER_AUDIT_COMPLETED",
		32: "SUPPLIER_AUDIT_FAILED",
		40: "CUSTOMS_CLEARED",
		41: "CUSTOMS_INSPECTION_HOLD",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":      0,
		"MANUFACTURING_BATCH_CREATED": 10,
		"QUALITY_ASSURANCE_PASSED":    11,
		"QUALITY_ASSURANCE_FAILED":    12,
		"SHIPMENT_CREATED":            20,
		"SHIPMENT_IN_TRANSIT":         21,
		"SHIPMENT_DELIVERED":          22,
		"SHIPMENT_DELAYED":            23,
		"SUPPLIER_AUDIT_SCHEDULED":    30,
		"SUPPLIER_AUDIT_COMPLETED":    31,
		"SUPPLIER_AUDIT_FAILED":       32,
		"CUSTOMS_CLEARED":             40,
		"CUSTOMS_INSPECTION_HOLD":     41,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_services_ingestion_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_v1_services_ingestion_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{0}
}

type IngestEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// --- Metadata ---
	// A unique identifier for this specific request, for idempotency.
	// The client should generate this (e.g., a UUID). If the same request_id
	// is seen twice, the system can safely ignore the second one.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The tenant on whose behalf this event is being submitted.
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Identifies the source system (e.g., "SAP-S4HANA", "ORACLE-NETSUITE", "Custom-IoT-Platform").
	SourceSystem string `protobuf:"bytes,3,opt,name=source_system,json=sourceSystem,proto3" json:"source_system,omitempty"`
	// --- Core Event Payload ---
	Event         *SupplyChainEvent `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventRequest) Reset() {
	*x = IngestEventRequest{}
	mi := &file_v1_services_ingestion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventRequest) ProtoMessage() {}

func (x *IngestEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventRequest.ProtoReflect.Descriptor instead.
func (*IngestEventRequest) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{0}
}

func (x *IngestEventRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *IngestEventRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IngestEventRequest) GetSourceSystem() string {
	if x != nil {
		return x.SourceSystem
	}
	return ""
}

func (x *IngestEventRequest) GetEvent() *SupplyChainEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type IngestEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for the workflow instance that was started by this event.
	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Status of the ingestion. Should be "ACCEPTED_FOR_PROCESSING".
	Status        string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventResponse) Reset() {
	*x = IngestEventResponse{}
	mi := &file_v1_services_ingestion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventResponse) ProtoMessage() {}

func (x *IngestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventResponse.ProtoReflect.Descriptor instead.
func (*IngestEventResponse) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{1}
}

func (x *IngestEventResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *IngestEventResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// SupplyChainEvent is the central message representing a single, auditable
// event in the supply chain.
type SupplyChainEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for this event within the source system.
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The time the event occurred in the real world.
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	// A controlled vocabulary of event types.
	EventType EventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=scg.v1.services.EventType" json:"event_type,omitempty"`
	// The primary asset or product this event pertains to.
	Asset *Asset `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	// The location where the event took place.
	Location *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// A list of all parties (suppliers, carriers, etc.) involved in this event.
	Actors []*Actor `protobuf:"bytes,6,rep,name=actors,proto3" json:"actors,omitempty"`
	// A flexible field for any other business-specific data (e.g., purchase order details,
	// quality control readings). This is where custom data from an ERP would go.
	// It maps directly to a JSON object.
	BusinessData *structpb.Struct `protobuf:"bytes,7,opt,name=business_data,json=businessData,proto3" json:"business_data,omitempty"`
	// An optional digital signature of the event payload to ensure non-repudiation.
	// (e.g., HMAC-SHA256 of the serialized payload).
	Signature     []byte `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupplyChainEvent) Reset() {
	*x = SupplyChainEvent{}
	mi := &file_v1_services_ingestion_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyChainEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyChainEvent) ProtoMessage() {}

func (x *SupplyChainEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyChainEvent.ProtoReflect.Descriptor instead.
func (*SupplyChainEvent) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{2}
}

func (x *SupplyChainEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *SupplyChainEvent) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *SupplyChainEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *SupplyChainEvent) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *SupplyChainEvent) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SupplyChainEvent) GetActors() []*Actor {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *SupplyChainEvent) GetBusinessData() *structpb.Struct {
	if x != nil {
		return x.BusinessData
	}
	return nil
}

func (x *SupplyChainEvent) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// An Asset represents the physical or digital good being tracked.
type Asset struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AssetId           string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`             // e.g., a serial number, pallet ID, or container ID.
	ProductCode       string                 `protobuf:"bytes,2,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"` // e.g., SKU, UPC.
	ProductName       string                 `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	BatchOrLotNumber  string                 `protobuf:"bytes,4,opt,name=batch_or_lot_number,json=batchOrLotNumber,proto3" json:"batch_or_lot_number,omitempty"`
	OriginCountryCode string                 `protobuf:"bytes,5,opt,name=origin_country_code,json=originCountryCode,proto3" json:"origin_country_code,omitempty"` // ISO 3166-1 alpha-2
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_v1_services_ingestion_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{3}
}

func (x *Asset) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Asset) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *Asset) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Asset) GetBatchOrLotNumber() string {
	if x != nil {
		return x.BatchOrLotNumber
	}
	return ""
}

func (x *Asset) GetOriginCountryCode() string {
	if x != nil {
		return x.OriginCountryCode
	}
	return ""
}

// An Actor represents a company or entity involved in the event.
type Actor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActorId       string                 `protobuf:"bytes,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"` // The unique ID for this actor in the customer's system.
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                      // e.g., "SUPPLIER", "MANUFACTURER", "LOGISTICS_PROVIDER", "CUSTOMS_BROKER".
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Actor) Reset() {
	*x = Actor{}
	mi := &file_v1_services_ingestion_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{4}
}

func (x *Actor) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *Actor) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Actor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// A Location represents a geographical point or facility.
type Location struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Could be a UN/LOCODE, a facility code, or just a country/city.
	LocationId  string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	CountryCode string `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // ISO 3166-1 alpha-2
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// Optional GPS coordinates for more precise tracking.
	Latitude      float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_v1_services_ingestion_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_v1_services_ingestion_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_v1_services_ingestion_proto_rawDescGZIP(), []int{5}
}

func (x *Location) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Location) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_v1_services_ingestion_proto protoreflect.FileDescriptor

const file_v1_services_ingestion_proto_rawDesc = "" +
	"\n" +
	"\x1bv1/services/ingestion.proto\x12\x0fscg.v1.services\x1a\x16v1/common/models.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xae\x01\n" +
	"\x12IngestEventRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12#\n" +
	"\rsource_system\x18\x03 \x01(\tR\fsourceSystem\x127\n" +
	"\x05event\x18\x04 \x01(\v2!.scg.v1.services.SupplyChainEventR\x05event\"N\n" +
	"\x13IngestEventResponse\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"\x9e\x03\n" +
	"\x10SupplyChainEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12C\n" +
	"\x0fevent_timestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0eeventTimestamp\x129\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x1a.scg.v1.services.EventTypeR\teventType\x12,\n" +
	"\x05asset\x18\x04 \x01(\v2\x16.scg.v1.services.AssetR\x05asset\x125\n" +
	"\blocation\x18\x05 \x01(\v2\x19.scg.v1.services.LocationR\blocation\x12.\n" +
	"\x06actors\x18\x06 \x03(\v2\x16.scg.v1.services.ActorR\x06actors\x12<\n" +
	"\rbusiness_data\x18\a \x01(\v2\x17.google.protobuf.StructR\fbusinessData\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\"\xc7\x01\n" +
	"\x05Asset\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12!\n" +
	"\fproduct_code\x18\x02 \x01(\tR\vproductCode\x12!\n" +
	"\fproduct_name\x18\x03 \x01(\tR\vproductName\x12-\n" +
	"\x13batch_or_lot_number\x18\x04 \x01(\tR\x10batchOrLotNumber\x12.\n" +
	"\x13origin_country_code\x18\x05 \x01(\tR\x11originCountryCode\"J\n" +
	"\x05Actor\x12\x19\n" +
	"\bactor_id\x18\x01 \x01(\tR\aactorId\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\x9c\x01\n" +
	"\bLocation\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\tR\n" +
	"locationId\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12\x12\n" +
	"\x04city\x18\x03 \x01(\tR\x04city\x12\x1a\n" +
	"\blatitude\x18\x04 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x05 \x01(\x01R\tlongitude*\xea\x02\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bMANUFACTURING_BATCH_CREATED\x10\n" +
	"\x12\x1c\n" +
	"\x18QUALITY_ASSURANCE_PASSED\x10\v\x12\x1c\n" +
	"\x18QUALITY_ASSURANCE_FAILED\x10\f\x12\x14\n" +
	"\x10SHIPMENT_CREATED\x10\x14\x12\x17\n" +
	"\x13SHIPMENT_IN_TRANSIT\x10\x15\x12\x16\n" +
	"\x12SHIPMENT_DELIVERED\x10\x16\x12\x14\n" +
	"\x10SHIPMENT_DELAYED\x10\x17\x12\x1c\n" +
	"\x18SUPPLIER_AUDIT_SCHEDULED\x10\x1e\x12\x1c\n" +
	"\x18SUPPLIER_AUDIT_COMPLETED\x10\x1f\x12\x19\n" +
	"\x15SUPPLIER_AUDIT_FAILED\x10 \x12\x13\n" +
	"\x0fCUSTOMS_CLEARED\x10(\x12\x1b\n" +
	"\x17CUSTOMS_INSPECTION_HOLD\x10)2l\n" +
	"\x10IngestionService\x12X\n" +
	"\vIngestEvent\x12#.scg.v1.services.IngestEventRequest\x1a$.scg.v1.services.IngestEventResponseBKZIgithub.com/SupplyChainGuard/scg-protos/protoc-gen/go/v1/services;servicesb\x06proto3"

var (
	file_v1_services_ingestion_proto_rawDescOnce sync.Once
	file_v1_services_ingestion_proto_rawDescData []byte
)

func file_v1_services_ingestion_proto_rawDescGZIP() []byte {
	file_v1_services_ingestion_proto_rawDescOnce.Do(func() {
		file_v1_services_ingestion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_services_ingestion_proto_rawDesc), len(file_v1_services_ingestion_proto_rawDesc)))
	})
	return file_v1_services_ingestion_proto_rawDescData
}

var file_v1_services_ingestion_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_services_ingestion_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_services_ingestion_proto_goTypes = []any{
	(EventType)(0),                // 0: scg.v1.services.EventType
	(*IngestEventRequest)(nil),    // 1: scg.v1.services.IngestEventRequest
	(*IngestEventResponse)(nil),   // 2: scg.v1.services.IngestEventResponse
	(*SupplyChainEvent)(nil),      // 3: scg.v1.services.SupplyChainEvent
	(*Asset)(nil),                 // 4: scg.v1.services.Asset
	(*Actor)(nil),                 // 5: scg.v1.services.Actor
	(*Location)(nil),              // 6: scg.v1.services.Location
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
}
var file_v1_services_ingestion_proto_depIdxs = []int32{
	3, // 0: scg.v1.services.IngestEventRequest.event:type_name -> scg.v1.services.SupplyChainEvent
	7, // 1: scg.v1.services.SupplyChainEvent.event_timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: scg.v1.services.SupplyChainEvent.event_type:type_name -> scg.v1.services.EventType
	4, // 3: scg.v1.services.SupplyChainEvent.asset:type_name -> scg.v1.services.Asset
	6, // 4: scg.v1.services.SupplyChainEvent.location:type_name -> scg.v1.services.Location
	5, // 5: scg.v1.services.SupplyChainEvent.actors:type_name -> scg.v1.services.Actor
	8, // 6: scg.v1.services.SupplyChainEvent.business_data:type_name -> google.protobuf.Struct
	1, // 7: scg.v1.services.IngestionService.IngestEvent:input_type -> scg.v1.services.IngestEventRequest
	2, // 8: scg.v1.services.IngestionService.IngestEvent:output_type -> scg.v1.services.IngestEventResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_v1_services_ingestion_proto_init() }
func file_v1_services_ingestion_proto_init() {
	if File_v1_services_ingestion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_services_ingestion_proto_rawDesc), len(file_v1_services_ingestion_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_services_ingestion_proto_goTypes,
		DependencyIndexes: file_v1_services_ingestion_proto_depIdxs,
		EnumInfos:         file_v1_services_ingestion_proto_enumTypes,
		MessageInfos:      file_v1_services_ingestion_proto_msgTypes,
	}.Build()
	File_v1_services_ingestion_proto = out.File
	file_v1_services_ingestion_proto_goTypes = nil
	file_v1_services_ingestion_proto_depIdxs = nil
}
